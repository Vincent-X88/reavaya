//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReavayaWebNew.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/UREX_Service")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/UREX_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNumber {
            get {
                return this.ContactNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNumberField, value) != true)) {
                    this.ContactNumberField = value;
                    this.RaisePropertyChanged("ContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDNumber {
            get {
                return this.IDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IDNumberField, value) != true)) {
                    this.IDNumberField = value;
                    this.RaisePropertyChanged("IDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Route", Namespace="http://schemas.datacontract.org/2004/07/UREX_Service")]
    [System.SerializableAttribute()]
    public partial class Route : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestLocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitLocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RouteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutePictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StopsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestLoc {
            get {
                return this.DestLocField;
            }
            set {
                if ((object.ReferenceEquals(this.DestLocField, value) != true)) {
                    this.DestLocField = value;
                    this.RaisePropertyChanged("DestLoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPrice {
            get {
                return this.DiscountPriceField;
            }
            set {
                if ((this.DiscountPriceField.Equals(value) != true)) {
                    this.DiscountPriceField = value;
                    this.RaisePropertyChanged("DiscountPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InitLoc {
            get {
                return this.InitLocField;
            }
            set {
                if ((object.ReferenceEquals(this.InitLocField, value) != true)) {
                    this.InitLocField = value;
                    this.RaisePropertyChanged("InitLoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutePicture {
            get {
                return this.RoutePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutePictureField, value) != true)) {
                    this.RoutePictureField = value;
                    this.RaisePropertyChanged("RoutePicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stops {
            get {
                return this.StopsField;
            }
            set {
                if ((object.ReferenceEquals(this.StopsField, value) != true)) {
                    this.StopsField = value;
                    this.RaisePropertyChanged("Stops");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/UREX_Service")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DATEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassengerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int transIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DATE {
            get {
                return this.DATEField;
            }
            set {
                if ((object.ReferenceEquals(this.DATEField, value) != true)) {
                    this.DATEField = value;
                    this.RaisePropertyChanged("DATE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassengerId {
            get {
                return this.PassengerIdField;
            }
            set {
                if ((this.PassengerIdField.Equals(value) != true)) {
                    this.PassengerIdField = value;
                    this.RaisePropertyChanged("PassengerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int transId {
            get {
                return this.transIdField;
            }
            set {
                if ((this.transIdField.Equals(value) != true)) {
                    this.transIdField = value;
                    this.RaisePropertyChanged("transId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ReavayaWebNew.ServiceReference1.CompositeType GetDataUsingDataContract(ReavayaWebNew.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ReavayaWebNew.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        bool RegisterUser(string name, string surname, string email, string idNumber, string phone, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegisterUser", ReplyAction="http://tempuri.org/IService1/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string surname, string email, string idNumber, string phone, string password, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecordTransaction", ReplyAction="http://tempuri.org/IService1/RecordTransactionResponse")]
        bool RecordTransaction(int passengerId, string name, decimal Amount, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RecordTransaction", ReplyAction="http://tempuri.org/IService1/RecordTransactionResponse")]
        System.Threading.Tasks.Task<bool> RecordTransactionAsync(int passengerId, string name, decimal Amount, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        int LoginUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        System.Threading.Tasks.Task<int> LoginUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        ReavayaWebNew.ServiceReference1.User getUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUser", ReplyAction="http://tempuri.org/IService1/getUserResponse")]
        System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.User> getUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyInput", ReplyAction="http://tempuri.org/IService1/verifyInputResponse")]
        bool verifyInput(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verifyInput", ReplyAction="http://tempuri.org/IService1/verifyInputResponse")]
        System.Threading.Tasks.Task<bool> verifyInputAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editAccount", ReplyAction="http://tempuri.org/IService1/editAccountResponse")]
        void editAccount(ReavayaWebNew.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editAccount", ReplyAction="http://tempuri.org/IService1/editAccountResponse")]
        System.Threading.Tasks.Task editAccountAsync(ReavayaWebNew.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoute", ReplyAction="http://tempuri.org/IService1/getRouteResponse")]
        ReavayaWebNew.ServiceReference1.Route getRoute(string intLoc, string destLoc, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoute", ReplyAction="http://tempuri.org/IService1/getRouteResponse")]
        System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.Route> getRouteAsync(string intLoc, string destLoc, System.DateTime time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfRegistered", ReplyAction="http://tempuri.org/IService1/checkIfRegisteredResponse")]
        bool checkIfRegistered(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkIfRegistered", ReplyAction="http://tempuri.org/IService1/checkIfRegisteredResponse")]
        System.Threading.Tasks.Task<bool> checkIfRegisteredAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTransactions", ReplyAction="http://tempuri.org/IService1/GetAllTransactionsResponse")]
        ReavayaWebNew.ServiceReference1.Transaction[] GetAllTransactions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllTransactions", ReplyAction="http://tempuri.org/IService1/GetAllTransactionsResponse")]
        System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.Transaction[]> GetAllTransactionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ReavayaWebNew.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ReavayaWebNew.ServiceReference1.IService1>, ReavayaWebNew.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ReavayaWebNew.ServiceReference1.CompositeType GetDataUsingDataContract(ReavayaWebNew.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ReavayaWebNew.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool RegisterUser(string name, string surname, string email, string idNumber, string phone, string password, string userType) {
            return base.Channel.RegisterUser(name, surname, email, idNumber, phone, password, userType);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string surname, string email, string idNumber, string phone, string password, string userType) {
            return base.Channel.RegisterUserAsync(name, surname, email, idNumber, phone, password, userType);
        }
        
        public bool RecordTransaction(int passengerId, string name, decimal Amount, string date) {
            return base.Channel.RecordTransaction(passengerId, name, Amount, date);
        }
        
        public System.Threading.Tasks.Task<bool> RecordTransactionAsync(int passengerId, string name, decimal Amount, string date) {
            return base.Channel.RecordTransactionAsync(passengerId, name, Amount, date);
        }
        
        public int LoginUser(string email, string password) {
            return base.Channel.LoginUser(email, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginUserAsync(string email, string password) {
            return base.Channel.LoginUserAsync(email, password);
        }
        
        public ReavayaWebNew.ServiceReference1.User getUser(int id) {
            return base.Channel.getUser(id);
        }
        
        public System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.User> getUserAsync(int id) {
            return base.Channel.getUserAsync(id);
        }
        
        public bool verifyInput(string email, string password) {
            return base.Channel.verifyInput(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> verifyInputAsync(string email, string password) {
            return base.Channel.verifyInputAsync(email, password);
        }
        
        public void editAccount(ReavayaWebNew.ServiceReference1.User user) {
            base.Channel.editAccount(user);
        }
        
        public System.Threading.Tasks.Task editAccountAsync(ReavayaWebNew.ServiceReference1.User user) {
            return base.Channel.editAccountAsync(user);
        }
        
        public ReavayaWebNew.ServiceReference1.Route getRoute(string intLoc, string destLoc, System.DateTime time) {
            return base.Channel.getRoute(intLoc, destLoc, time);
        }
        
        public System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.Route> getRouteAsync(string intLoc, string destLoc, System.DateTime time) {
            return base.Channel.getRouteAsync(intLoc, destLoc, time);
        }
        
        public bool checkIfRegistered(string email) {
            return base.Channel.checkIfRegistered(email);
        }
        
        public System.Threading.Tasks.Task<bool> checkIfRegisteredAsync(string email) {
            return base.Channel.checkIfRegisteredAsync(email);
        }
        
        public ReavayaWebNew.ServiceReference1.Transaction[] GetAllTransactions() {
            return base.Channel.GetAllTransactions();
        }
        
        public System.Threading.Tasks.Task<ReavayaWebNew.ServiceReference1.Transaction[]> GetAllTransactionsAsync() {
            return base.Channel.GetAllTransactionsAsync();
        }
    }
}
